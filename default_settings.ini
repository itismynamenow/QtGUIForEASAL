; Strings are enclosed in ""
; Bools are either "true" or "false"
; Arrays are enclosed in {} and values are separated by commas

[MolecularUnitA]
file = "../files/initial_test_small_helixes_A.pdb"
ignored_rows = {}; e.g. {0, 5, 10}
x_col = 6
y_col = 7
z_col = 8
radius_col = 9
label_col = 3
atomNo_col = 1

;
;
;

[MolecularUnitB]
file = "../files/initial_test_small_helixes_B.pdb"
ignored_rows = {}; e.g. {0, 5, 10}
x_col = 6
y_col = 7
z_col = 8
radius_col = 9
label_col = 3
atomNo_col = 1

;
;
;

[DistanceData]
file = "../files/source_files/union computed desired distances.txt"
ignored_rows = {}
label1_col = 0
label2_col = 1
radius_col = 2
radiusMin_col = -1; min radius
radiusMax_col = -1; max radius
matrixInsteadOfColumns = false ; RUIJIN
rangeOfRadius = false
rangeOfRadius_min = 0.5 ; relative to size of radius
rangeOfRadius_max = 0.5 ; relative to size of radius

;
;
;

[Output]
; MAYBE call AtlasDataDirectory instead, could set to side and save to use later
dataDirectory = "../data/"; needs a slash on the end

;
;
;

[General]
; aka maple, the code still exists, but it's too slow, should be removed from user interface
; so if a node is a non-partial 3-tree and it's false, it just ignores this node and doesn't sample in it
runSolver = false
virus_mer = false ; RUIJIN

; TODO
; no_gui = true

reverseWitness = false ; RUIJIN



;
;
;

[RootNodeCreation]
createChildren = true; only create root nodes //set it false for grid, mc compariosns

; aka pregen, if false it only creates one 5d root node. Only really useful for testing. Or perhaps if, after you wait for sampling of this first one you can go and make a new one in the window.
; would generally start then immediately stop this first useless one, then choose the one of interest.
autoGenDumbbells = false
; might want to start lower if the high stuff isn't too interseting
; 5 is like to top to top configs and stuff... might want to start at 4.
; and like 6d is like totally meaningless, no reason to start there even though it gives "full coverage"
dimension_of_initialContactGraphs = 5

; also for comparing data, used when picking root nodes
middleDumbbells = false ; only select atom pairs in the middle
closeByDumbbells = true ; only select ones that are this close
closeByDumbbellsAmount = 7.0 ; setting that interval to 7 (the amount for translation along z axis) will be enough for marias data.
reversePairDumbbells = false ; in create initial 4d dumbbells, when creating root nodes, flase if you can't use the reversed MU

;
;
;

[Sampling]
runSample = true ; false if you want to view existing atlas (in data directory). Can choose to complete after loading
; in angstroms, the range in which it will sample
; needed in jacobian and regular
; MARIAs
;GridXY = 20.0
;GridZ = 3.5
GridXY = 26.0 ; might want to separated to x and y
GridZ = 7.0; 5

stepSize = 0.2 ; relative to radius, which is in angstrom
sixDimensions = false ; do sampling in allowable range (the epsilon) of the bond lengths, so adding a bond isn't really reducing the dimension (it's 6 all the way until the end)
; compute volume of node to calc step size to keep number of smaples same for all nodes
dynamicStepSizeAmong = false; //set it true for grid, mc comparisons to have same volume
; 0 is uniform in cayley, 1 is reverse linear, and 2 is linear
dynamicStepSizeWithin = 0;  //set it 1 for reverse linear step size, 2 for linear step size

JacobianSampling = false ; overrides dynamic step size stuff, and step size variable
; x, y, z, phi, cos(theta), psi
;gridSteps[6] = {.4,.4,.4, 4, 4, 4}
;gridSteps[6] = {2.,2.,2., 10, 0.044658199, 10}
gridSteps = {1.0, 1.0, 1.0, 10.0, 0.044658199, 10.0} ; related to jacobian sampling, to attempt to get this uniform step size in the cartesian

;
;
;

[Collision]
; old collisionThreshold. Sum or radii - threshold for allowable "not colliding"
; min allowable distance between 2 atoms in one molecular unit when in <= 4 dimensions and auto-generating dumbbells
threshold = 0.01
min = 1.8 ; this is max dumbbell distance within ONE helix
max = 7.2 ;
checkAngle = false ; hard coded limit (~30 degrees) for the angle between 2 helices
; used for experimental things, checks if the whole MU collides
; also need it off to compute the volume for finding dynamic step sizes
; equivalent to setting lowerthreshold to 0... maybe collision and contect thresholds should be separate
stericConstraint = true; //set it false to allow collision
wholeCollision = false ; When molecule is large, don't want to check collisions by atom, but instead by regions
; maybe add a flag to switch between multiply and +/-
; replaces threshold (first is +, second is *)
contactUpperThreshold = 1.0; //1; //if distance < sum_of_radius+contactUpperThreshold, then it is identified as contact
contactLowerThreshold = 0.8; //if distance > sum_of_radius*contactLowerThreshold, then it is identified as contact

;
;
;

[AtlasBuilding]
stop = false ; to stop the running of the atlas node generation
breadthFirst = true ; misspelled. Changes the way you explore the atlas for generating all the nodes
; when picking parameters, we want to keep the space "spherical". If they are similar in size, then it's better
parameterMinDeviation = true; //this not only sets parameters but also stepsize

; for tighter bounds than just triangle inequality (for constraints)
; changing a paremeter results in a lot of recalculation, so it's complicated and must be done every step. Might have bugs, could be slow, set to false to use basic traingle
; optimally it would always be on and there shouldn't be a setting. Tighter bound means less wasted sampling
tetrahedralEquality_toCreateChildNode = false

ifBadAngleWitness_createChild = false ; maybe node only exists because of a bad angle in the parent. But if you start sampling in the child you'll find some good angles!

;
;
;

[Saving]
savePointsFrequency = 10000 ; To keep IO from being really busy. Number of samples in the config space
saveWitnessToFinalChild = true ; if you find something while sampling that has like 10 more contacts, should you save at every node (false), or just the final 0d node in the first path (true)? If it's true, otherwise empty nodes will look empty, but should really have these witnesses. Tough problem... Maybe look at parents
saveBoundary = false ; //to the current node (this boundary is actually the witness points that are sent to child node) //can set it true if it is just 5d to see other than interiors, since we are not creating child nodes for just5d case
;the terminology is: when we have a config with new contacts, it is called boundary config on this node that we were sampling.
;if we send this config to child node, it is called witness point in the child node.
; too much info for user, needs to just be ironed out and set in stone


;note:2june2014
;actually maybe the implementation can be changed so that the boundary orientation
;will be saved on the current node but non of the witness will be saved to any
;child node. However whenever we display a child node, we will collect all witness
;points from all parents through boundary orientations.
;since every boundary orientation has vector<int> boundary that collects all
;nodeIDs that those witness were supposed to send.



;grid is cartesian
; realize the cayley sample then check if it's out grid. Do we save what we found?
; used to investigate problem, not useful for user
saveOutGridOrientation = false; //keep it true for counting total number of samples


;
;
;

[Statistics]
run_statistics = false
; to have separate +/exact/- directories and then merge them together
; user wouldn't use something like this
folder1Location = ""
folder2Location = ""
folder3Location = ""
gridLocation = ""

createPseudoAtlas = false ; read trajectory data, then from that data create stratification. For statistics, shouldn't be displayed

;
;
;

[OldOrTesting]
oldversion = false ; ignore it, should probably remove any code that checks it

just5d = false;  //set it true for grid, mc compariosns
just345d = false
